server.port = 8000

auth.god_mode=true

jwt.secret=itsmysecret12pdudhat34
jwt.token_validity=90000
jwt.refresh_cooldown=180

# server.servlet.context-path=/api

# local-mongo aedmdidn aedkmaidnpeaeseswwdoerod

spring.data.mongodb.uri=mongodb://springuser:springauth@localhost:27017/springmongodb
#spring.data.mongodb.uri=mongodb://springuser:springauth@3.7.33.197:27017/springmongodb
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG

management.endpoints.web.exposure.include=*
server.error.whitelabel.enabled=false


# Hibernate ddl auto (create, create-drop, validate, update)
# spring.jpa.hibernate.ddl-auto = update


# kafka config

# use simple message broker instead of kafka after 0 seconds of retry
spring.kafka.enabled = false
spring.kafka.properties.request.timeout.ms = 0

spring.kafka.bootstrap-servers = localhost:9092
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="te1234st";
spring.kafka.properties.reconnect.backoff.ms = 1000
spring.kafka.consumer.group-id = ''
spring.kafka.consumer.auto-offset-reset = earliest

# Redis Config
spring.cache.type = simple
spring.redis.host = localhost
spring.redis.port = 6379
# spring.redis.password = y6mFe6o3ckY9

