server.port = 8000

auth.god_mode=true

jwt.secret=dev-secret
jwt.token_validity=900000
jwt.refresh_cooldown=180

# server.servlet.context-path=/api

#spring.data.mongodb.uri=mongodb+srv://springuser:springauth@springapp.6uzcr.mongodb.net/springmongodb?retryWrites=true&w=majority
spring.data.mongodb.uri=mongodb://springuser:springauth@localhost:27017/springmongodb
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG

management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

server.error.whitelabel.enabled=false

# s3 bucket config

spring.servlet.multipart.max-file-size=5242880

amazon.aws.s3.bucket.public=public-hotel-files
amazon.aws.s3.bucket.private=private-hotel-files

blobstore.provider=aws-s3
blobstore.id=
blobstore.secret=

amazon.aws.s3.url=https://{0}.s3.ap-south-1.amazonaws.com
amazon.aws.s3.region=ap-south-1
amazon.aws.access-key-id=
amazon.aws.access-key-secret=

# kafka config

# use simple message broker instead of kafka after 0 seconds of retry
spring.kafka.enabled = false
spring.kafka.properties.request.timeout.ms = 0

spring.kafka.bootstrap-servers = localhost:9092
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="" password="";

#spring.kafka.properties.reconnect.backoff.ms = 10000
spring.kafka.consumer.group-id = 'default'
spring.kafka.consumer.auto-offset-reset = latest

#spring.kafka.listener.log-container-config=true

# Redis Config
#spring.cache.type = simple
#spring.redis.host = localhost
#spring.redis.port = 6379
# spring.redis.password = 

# mailer config

	# connection details
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ahmetbarutcublog@gmail.com
spring.mail.password=szuaencegruehsxi

	# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

	# TLS , port 587
#spring.mail.properties.mail.smtp.starttls.enable=true

	# SSL, post 465
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
